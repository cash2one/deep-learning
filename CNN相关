CNN的主要应用（我所知道的...）有图像识别、语音识别、文字情感分析。
第一大块：图像识别
MNIST数据集是手写字的数据，图像识别里最简单的数据。可以去官网下载 http://yann.lecun.com/exdb/mnist/
但是下载下来的数据是二进制格式，要进行解析才能得到图片像素信息
计划用tensorflow来写代码，参考google的一篇文章来识别。
<img src="http://img.blog.csdn.net/20150812160455753?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center"></img>
这是mnist数据集的二进制格式。
今天研究了一下CNN卷及的过程，单通道和多通道的问题。。。
首先单通道的时候，假设卷积核的个数为N，卷积核中的参数个数为K，而图片上区域感受野的个数为M（就是卷积核一个一个平移的个数）。。
那么权值矩阵要转换成N×K大小，而图片矩阵要转换成K×M大小。
例如原来的卷积核1，2：
[[w111,w112]] [[w211,w212]]
 [w121,w122]   [w221,w222]
 
 
这样N=2,K=4
而图片矩阵为：
 [x11,x12,x13]
[[x21,x22,x23]]
 [x31,x32,x33]

这样M=4
把W矩阵转换为
[[w111,w112,w121,w122]]
 [w211,w212,w221,w222]
e而把图片矩阵按照感受野转换为P：
 [x11,x12,x21,x22]
[[x12,x13,x22,x23]]
 [x21,x22,x31,x32]
 [x22,x23,x32,x33]
那么卷积的结果就是R=W×P，这样得到了卷积层的输入，在经过ReLU激活函数，就得到了卷积层的输出。。。

当多通道的图片的时候（例如RBG图片），在每个通道上用不同的参数矩阵进行卷积，最后得到同样通道数的卷积层输出
（例如RBG图片有三个通道，那么一个卷积核的输出也有三个通道，也就是三层）
假设通道数是C
那么权值矩阵要转换成shape([C，K×C])
而图片矩阵要转换成shape([K×C，M×C])（行数，列数）
例如其中一个卷积核的参数矩阵是：
[[w111,w112]] [[w211,w212]] [[w311,w312]]
 [w121,w122]   [w221,w222]   [w321,w322]
三通道的图片的矩阵是PC1,PC2,PC3：
 [x111,x112,x121,x122]    [x211,x212,x221,x222]     [x311,x312,x321,x322]
[[x112,x113,x122,x123]]  [[x212,x213,x222,x223]]   [[x312,x313,x322,x323]]
 [x121,x122,x131,x132]    [x221,x222,x231,x232]     [x321,x322,x331,x332]
 [x122,x123,x132,x133]    [x222,x223,x232,x233]     [x322,x323,x332,x333]
转换成W和P矩阵：
 [w111,w112,w121,w122]
[[w211,w212,w221,w222]]
 [w311,w312,w321,w322]
 
 [A1,0,0]
[[0,A2,0]]
 [0,0,A3]
其中Ai和单通道的P矩阵类似，每个通道的P矩阵而已。。。。
这样就得到了M×C×C矩阵大小的卷积层输入，经过ReLU，得到卷积层输出。。。
 

 
 
 
 
 
 
